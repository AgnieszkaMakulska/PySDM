@article{Shima_et_al_2009,
  title = {The super‐droplet method for the numerical simulation of clouds and precipitation: a particle‐based and probabilistic microphysics model coupled with a non‐hydrostatic model},
  journal = {Q. J. Royal Meteorol. Soc.},
  author = {Shima, S. and Kusano, K. and Kawano, A. and Sugiyama, T. and Kawahara, S.},
  year = {2009},
  doi = {10.1002/qj.441}
}

@misc{ThrustRTC,
  author = {Yang, F.},
  title = {ThrustRTC: CUDA tool set for non-C++ languages that provides similar functionality like Thrust, with NVRTC at its core},
  year = {2020},
  publisher = {GitHub},
  journal = {GitHub repository},
  url = {https://github.com/fynv/thrustrtc}
}

@inproceedings{Numba,
  author = {Lam, S.K. and Pitrou, A. and Seibert, S.},
  title = {Numba: A LLVM-Based Python JIT Compiler},
  year = {2015},
  doi = {10.1145/2833157.2833162},
  abstract = {Dynamic, interpreted languages, like Python, are attractive for domain-experts and scientists experimenting with new ideas. However, the performance of the interpreter is often a barrier when scaling to larger data sets. This paper presents a just-in-time compiler for Python that focuses in scientific and array-oriented computing. Starting with the simple syntax of Python, Numba compiles a subset of the language into efficient machine code that is comparable in performance to a traditional compiled language. In addition, we share our experience in building a JIT compiler using LLVM[1].},
  booktitle = {Proceedings of the Second Workshop on the LLVM Compiler Infrastructure in HPC},
  location = {Austin, Texas}
}
